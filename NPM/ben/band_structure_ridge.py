import os
import sys
import builtins
import numpy as np
import ase, ase.build
from ase import Atoms
from phonopy.structure.atoms import PhonopyAtoms
from ase.optimize import LBFGS
import quippy, quippy.descriptors
from quippy.potential import Potential
from phonopy import Phonopy
from phonopy.phonon.band_structure import get_band_qpoints_and_path_connections

# SET UP UNIT CELL
# cell = ase.build.bulk('Si', 'diamond', 5.44)
a = 5.431
unitcell = PhonopyAtoms(['Si'] * 135,
                    cell=np.diag((5*a, a, 6*a)),
                    scaled_positions=[
                     (9.91559335e-01, 4.53412089e-02, 1.60948767e-01),
                     (1.65334065e-03, 5.05345655e-01, 2.48453288e-01),
                     (4.87795368e-02, 2.53927695e-01, 2.03907920e-01),
                     (1.01014978e-01, 6.20196297e-03, 2.45891296e-01),
                     (5.02347285e-02, 7.63194109e-01, 2.89730604e-01),
                     (1.50828807e-01, 2.37804541e-01, 2.91175949e-01),
                     (1.48393693e-01, 7.36363311e-01, 2.04096794e-01),
                     (6.95084470e-02, 6.41981847e-01, 1.75659263e-01),
                     (2.24711858e-01, 8.79995678e-01, 1.79277519e-01),
                     (1.97904905e-01, 4.82070189e-01, 2.46896506e-01),
                     (2.51258787e-01, 2.71275778e-01, 2.01799425e-01),
                     (3.02090544e-01, 1.79194403e-02, 2.44486140e-01),
                     (2.48876312e-01, 7.59252567e-01, 2.84926585e-01),
                     (3.50267267e-01, 2.52938740e-01, 2.89281121e-01),
                     (3.47180081e-01, 7.49375093e-01, 2.01198045e-01),
                     (2.83172886e-01, 5.86272099e-01, 1.57379028e-01),
                     (4.26548635e-01, 8.77253320e-01, 1.78477483e-01),
                     (3.97465155e-01, 4.94198722e-01, 2.44397492e-01),
                     (4.52779000e-01, 2.66997205e-01, 2.02483470e-01),
                     (5.01858961e-01, 1.43400980e-02, 2.46076102e-01),
                     (4.48786531e-01, 7.56010416e-01, 2.85382643e-01),
                     (5.51866823e-01, 2.55224612e-01, 2.88465346e-01),
                     (5.48217857e-01, 7.48018766e-01, 2.02593911e-01),
                     (4.86339875e-01, 5.79056077e-01, 1.59562328e-01),
                     (5.74016625e-01, 1.33443416e-01, 1.76667204e-01),
                     (6.00905863e-01, 4.89163854e-01, 2.42426643e-01),
                     (6.54316918e-01, 2.33731126e-01, 2.00527980e-01),
                     (6.98744108e-01, 9.70062097e-01, 2.45088080e-01),
                     (6.48287623e-01, 7.35283089e-01, 2.88247470e-01),
                     (7.51621570e-01, 2.33018810e-01, 2.84971307e-01),
                     (7.49454215e-01, 7.18657473e-01, 2.02020011e-01),
                     (7.17787852e-01, 4.03868183e-01, 1.57456501e-01),
                     (7.76020998e-01, 1.07160521e-01, 1.78225278e-01),
                     (8.03259742e-01, 5.06096542e-01, 2.46549807e-01),
                     (8.52388752e-01, 2.45662319e-01, 2.04476281e-01),
                     (8.98454526e-01, 9.78011201e-01, 2.47294158e-01),
                     (8.48708341e-01, 7.50079788e-01, 2.92197480e-01),
                     (9.50787138e-01, 2.37189132e-01, 2.87983735e-01),
                     (9.52538425e-01, 7.50754034e-01, 2.04184628e-01),
                     (9.31215225e-01, 3.56877787e-01, 1.78259671e-01),
                     (9.99879061e-01, 1.55527042e-03, 3.33728548e-01),
                     (1.93588864e-04, 4.97879420e-01, 4.15306359e-01),
                     (5.32013040e-02, 2.57873776e-01, 3.73848221e-01),
                     (1.03713471e-01, 5.57066167e-03, 4.16562226e-01),
                     (3.10019995e-02, 8.52354160e-01, 4.46864071e-01),
                     (1.67498009e-01, 1.65053119e-01, 4.59661606e-01),
                     (1.49062152e-01, 7.34591295e-01, 3.74112722e-01),
                     (1.00210812e-01, 5.02067412e-01, 3.29226445e-01),
                     (2.01467731e-01, 9.90209348e-01, 3.33209071e-01),
                     (1.99901157e-01, 4.81628718e-01, 4.16419893e-01),
                     (2.52671359e-01, 2.60417606e-01, 3.72002541e-01),
                     (3.02344758e-01, 8.85767495e-03, 4.15390542e-01),
                     (2.26182829e-01, 8.68866216e-01, 4.40157066e-01),
                     (3.50762866e-01, 2.60141785e-01, 4.60672348e-01),
                     (3.48894823e-01, 7.48991295e-01, 3.71800318e-01),
                     (2.98913447e-01, 5.13304837e-01, 3.27711855e-01),
                     (3.99769973e-01, 9.97574402e-01, 3.29846234e-01),
                     (3.98915241e-01, 4.96735491e-01, 4.14263490e-01),
                     (4.49428323e-01, 2.63276974e-01, 3.68894299e-01),
                     (4.98438227e-01, 1.31974566e-02, 4.10730000e-01),
                     (4.52461025e-01, 7.49367708e-01, 4.54088563e-01),
                     (5.46743500e-01, 2.60135041e-01, 4.54923559e-01),
                     (5.49918560e-01, 7.46113568e-01, 3.71773559e-01),
                     (4.99992137e-01, 5.12263446e-01, 3.27457091e-01),
                     (6.00426983e-01, 9.94436047e-01, 3.30395572e-01),
                     (6.02225464e-01, 4.87641090e-01, 4.13050916e-01),
                     (6.52543025e-01, 2.39685394e-01, 3.71178925e-01),
                     (6.97655365e-01, 9.82586695e-01, 4.16056500e-01),
                     (6.47209821e-01, 7.35326947e-01, 4.59726341e-01),
                     (7.74149891e-01, 1.21712218e-01, 4.40068928e-01),
                     (7.47256095e-01, 7.30873273e-01, 3.72241005e-01),
                     (7.01078230e-01, 4.81160087e-01, 3.27008097e-01),
                     (7.98516075e-01, 2.24805304e-03, 3.33667334e-01),
                     (8.00510376e-01, 5.08577237e-01, 4.16117493e-01),
                     (8.51828664e-01, 2.57581589e-01, 3.73895450e-01),
                     (8.96794311e-01, 9.87260436e-01, 4.16621477e-01),
                     (8.32806032e-01, 8.25677142e-01, 4.59373360e-01),
                     (9.69411626e-01, 1.42948720e-01, 4.47010927e-01),
                     (9.47366368e-01, 7.37999157e-01, 3.73552115e-01),
                     (9.00832705e-01, 4.90072673e-01, 3.29089978e-01),
                     (2.70306763e-02, 8.91531846e-01, 5.06337722e-01),
                     (9.98072948e-01, 4.77372155e-01, 5.98387620e-01),
                     (4.63740487e-02, 2.19144625e-01, 5.52886555e-01),
                     (1.02709883e-01, 2.68566085e-04, 5.96124619e-01),
                     (6.38481463e-02, 6.85507283e-01, 6.38001706e-01),
                     (1.18543200e-01, 4.09473040e-01, 6.09181504e-01),
                     (1.60899798e-01, 7.99539549e-01, 5.51258890e-01),
                     (8.56584266e-02, 6.00289994e-01, 5.32920758e-01),
                     (2.22897711e-01, 9.44593933e-01, 5.03949476e-01),
                     (1.99501359e-01, 4.98355061e-01, 5.93749766e-01),
                     (2.50322339e-01, 2.72505355e-01, 5.47509680e-01),
                     (3.02550976e-01, 6.05118736e-02, 5.91895908e-01),
                     (2.60098125e-01, 7.45808161e-01, 6.25341496e-01),
                     (3.53830789e-01, 2.93124747e-01, 6.33515422e-01),
                     (3.62750286e-01, 8.33952750e-01, 5.51889578e-01),
                     (2.82568138e-01, 6.76729558e-01, 5.33580937e-01),
                     (4.30428264e-01, 1.40931393e-01, 4.79051100e-01),
                     (3.99396082e-01, 4.74872581e-01, 5.80392372e-01),
                     (4.26470409e-01, 1.41469205e-01, 5.38102265e-01),
                     (4.96226481e-01, 2.38936098e-03, 5.77459822e-01),
                     (4.53158627e-01, 7.20539214e-01, 6.20016385e-01),
                     (5.44611560e-01, 2.69427267e-01, 6.19779784e-01),
                     (5.71672794e-01, 8.74487829e-01, 5.46612734e-01),
                     (5.08706117e-01, 5.53050250e-01, 4.98500196e-01),
                     (5.68882811e-01, 8.62791683e-01, 4.77738292e-01),
                     (5.98525874e-01, 5.19470071e-01, 5.81329166e-01),
                     (6.36904157e-01, 1.76934883e-01, 5.50082106e-01),
                     (6.95239203e-01, 9.41797906e-01, 5.90674982e-01),
                     (6.45442380e-01, 7.05520126e-01, 6.33240067e-01),
                     (7.38937990e-01, 2.53078126e-01, 6.24280462e-01),
                     (7.48946747e-01, 7.33344850e-01, 5.46989263e-01),
                     (7.18496339e-01, 3.26978337e-01, 5.33959557e-01),
                     (7.76923415e-01, 6.00111706e-02, 5.03508891e-01),
                     (7.98593405e-01, 5.16146914e-01, 5.94944645e-01),
                     (8.35653081e-01, 2.06756045e-01, 5.52530398e-01),
                     (9.05966555e-01, 2.44357533e-02, 5.89230702e-01),
                     (8.82496023e-01, 6.05666054e-01, 6.02863396e-01),
                     (9.31763019e-01, 3.26754088e-01, 6.40049050e-01),
                     (9.64092125e-01, 7.70870654e-01, 5.52317777e-01),
                     (9.03859721e-01, 4.59811883e-01, 5.32989097e-01),
                     (3.54291590e-01, 8.51798120e-01, 7.25195234e-01),
                     (3.21557941e-01, 6.20708316e-01, 6.71116595e-01),
                     (3.98360839e-01, 9.62061235e-01, 6.62447008e-01),
                     (4.00288536e-01, 4.97846986e-01, 7.43715366e-01),
                     (4.47442593e-01, 2.23970518e-01, 7.04070292e-01),
                     (4.99156818e-01, 9.99361782e-01, 7.49235004e-01),
                     (4.65935435e-01, 6.47854711e-01, 7.80690993e-01),
                     (5.32311278e-01, 3.51233874e-01, 7.80712013e-01),
                     (5.50858894e-01, 7.74172897e-01, 7.04156556e-01),
                     (4.99534386e-01, 4.97605284e-01, 6.67939481e-01),
                     (6.00134748e-01, 3.29691819e-02, 6.62427139e-01),
                     (5.97894555e-01, 4.98678612e-01, 7.43460215e-01),
                     (6.44477602e-01, 1.46782516e-01, 7.24812660e-01),
                     (6.77923511e-01, 3.77507445e-01, 6.70786534e-01),
                     (4.98797597e-01, 4.97972438e-01, 8.42565790e-01)])

# SET UP CALCULATOR
# Gaussian Approximation Potentials (GAP)
# Do I need this here?
orig_dir = os.getcwd()
model_dir = os.path.dirname(sys.argv[0])
if model_dir != '':
    os.chdir(model_dir)

if os.path.exists('gp_iter6_sparse9k.xml.sparseX.GAP_2017_6_17_60_4_3_56_1651.bz2'):
    os.system('bunzip2 gp_iter6_sparse9k.xml.sparseX.GAP_2017_6_17_60_4_3_56_1651.bz2')

try:
    calc = Potential(init_args='Potential xml_label="GAP_2017_6_17_60_4_3_56_165"',
                                               param_filename='gp_iter6_sparse9k.xml')
    Potential.__str__ = lambda self: '<GAP Potential>'
finally:
    os.chdir(orig_dir)


no_checkpoint = True

# CREATE SUPERCELL
smat = [(2, 0, 0), (0, 2, 0), (0, 0, 1)]
phonon = Phonopy(unitcell, smat, primitive_matrix='auto')
phonon.generate_displacements(distance=0.03)

# CALCULATE DISPLACEMENTS
print("[Phonopy] Atomic displacements:")
disps = phonon.get_displacements()
for d in disps:
    print("[Phonopy] %d %s" % (d[0], d[1:]))

# CALCULATE FORCES
supercells = phonon.get_supercells_with_displacements()
set_of_forces = []
for scell in supercells:
    cell = Atoms(symbols=scell.get_chemical_symbols(),
                 scaled_positions=scell.get_scaled_positions(),
                 cell=scell.get_cell(),
                 pbc=True)
    cell.set_calculator(calc)
    forces = cell.get_forces()
    drift_force = forces.sum(axis=0)
    print(("[Phonopy] Drift force:" + "%11.5f" * 3) % tuple(drift_force))
    # Simple translational invariance
    for force in forces:
        force -= drift_force / forces.shape[0]
    set_of_forces.append(forces)

# PRODUCE FORCE CONSTANTS
phonon.produce_force_constants(forces=set_of_forces)
print('')
print("[Phonopy] Phonon frequencies at Gamma:")
for i, freq in enumerate(phonon.get_frequencies((0, 0, 0))):
    print("[Phonopy] %3d: %10.5f THz" %  (i + 1, freq)) # THz

# DOS
phonon.set_mesh([12, 12, 12])
phonon.set_total_DOS(tetrahedron_method=True)
print('')
print("[Phonopy] Phonon DOS:")
for omega, dos in np.array(phonon.get_total_DOS()).T:
    print("%15.7f%15.7f" % (omega, dos))

# PLOT BAND STRUCTURE
path = [[[0.5, 0.25, 0.75], [0, 0, 0], [0.5, 0, 0.5],
        [0.5, 0.25, 0.75], [0.5, 0.5, 0.5], [0, 0, 0], [0.375, 0.375, 0.75],
        [0.5, 0.25, 0.75], [0.625, 0.25, 0.625], [0.5, 0, 0.5]]]
phonon.save(filename="phonopy_params_ridge.yaml", settings={'force_constants': True, 'create_displacements': True})
labels = ["$\\Gamma$", "X", "U", "K", "$\\Gamma$", "L", "W"]
qpoints, connections = get_band_qpoints_and_path_connections(path, npoints=51)
phonon.run_band_structure(qpoints, path_connections=connections, labels=labels)
phonon.plot_band_structure_and_dos().show()
